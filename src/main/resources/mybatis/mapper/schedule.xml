<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.couple.back.mybatis.ScheduleMapper">

	<resultMap id="TodoResultMap" type="com.couple.back.model.Todo">
		<result property="id" column="id"/>
		<result property="todo" column="todo"/>
		<result property="completedYn" column="completedYn"/>
		<result property="day" column="day"/>
		<result property="createUserId" column="createUserId"/>
		<result property="dayOrder" column="dayOrder"/>
	</resultMap>

	<resultMap id="GroupedTodos" type="com.couple.back.dto.GroupedTodos">
		<result property="day" column="day"/>
		<collection property="todos" ofType="com.couple.back.model.Todo" resultMap="TodoResultMap"/>
	</resultMap>

	<select id="selectCalendars" parameterType="com.couple.back.dto.CalendarRequest" resultType="com.couple.back.model.Calendar" >
		SELECT
			DISTINCT
			cal.id,
			cal.title,
			cal.start_day AS "startDay",
			cal.end_day AS "endDay",
			cal.color,
			cal.text_color AS "textColor",
			cal.type,
			cal.user_id as "userId"
		FROM calendar cal
		LEFT JOIN users u
		ON cal.couple_id = u.couple_id
		LEFT JOIN couple c
		ON u.couple_id = c.couple_id
		AND c.status IN ('03', '06')
		WHERE cal.user_id = #{id}
		<choose>
			<when  test="type == 'all'">
				OR (u.user_id = #{id} AND c.couple_id IS NOT NULL)
			</when>
			<when  test="type == '02'">
				AND cal.type = '02'
			</when>
			<otherwise>
				AND cal.type = '01'
				OR (u.user_id = #{id} AND c.couple_id IS NOT NULL)
			</otherwise>
		</choose>
	</select>

	<insert id="insertCalendar" parameterType="com.couple.back.model.Calendar">
		INSERT INTO calendar(id, title, start_day, end_day, color, text_color, type, couple_id, user_id, create_user_id, update_user_id)
		VALUES (#{id}, #{title}, #{startDay}, #{endDay}, #{color}, #{textColor}, #{type}, #{coupleId}, #{userId}, #{createUserId}, #{updateUserId});
	</insert>

	<update id="updateCalendar" parameterType="com.couple.back.model.Calendar">
		UPDATE calendar
		SET 
			title=#{title},
			start_day=#{startDay},
			end_day=#{endDay},
			color=#{color},
			text_color=#{textColor},
			type=#{type},
			couple_id=#{coupleId},
			update_user_id=#{updateUserId},
			update_date_time = now()
		WHERE id = #{id};
	</update>

	<delete id="deleteCalender" parameterType="String">
		DELETE FROM calendar
 		WHERE id = #{id};
	</delete>

	<select id="selectGroupedTodosByCreateId" parameterType="Long" resultMap="GroupedTodos">
		select
			id,
			todo,
			completed_yn as "completedYn",
			day,
			create_user_id as "createUserId",
			day_order as "dayOrder"
		from todo
		where create_user_id = #{id}
		order by day, day_order
	</select>

	<insert id="insertTodo" parameterType="com.couple.back.model.Todo">
		INSERT INTO todo(id, todo, completed_yn, day, create_user_id, update_user_id, day_order)
		VALUES (#{id}, #{todo}, #{completedYn}, #{day}, #{createUserId}, #{updateUserId}, #{dayOrder});
	</insert>

	
	<update id="updateTodo" parameterType="com.couple.back.model.Todo">
		UPDATE todo
		SET 
			<if test="todo != null and todo != ''">todo=#{todo},</if>
			<if test="completedYn != null and completedYn != ''">completed_yn=#{completedYn},</if>
			<if test="updateUserId != null">update_user_id=#{updateUserId},</if>
			update_date_time = now()
		WHERE id = #{id};
	</update>

	<delete id="deleteTodo" parameterType="String">
		DELETE FROM todo
 		WHERE id = #{id};
	</delete>

</mapper>